-- Simple counter
-- Increases by one as long as reset if not asserted
-- Once reset is asserted, the count is set to zero

contract counterSpecs(r : bool) returns (c : int);
let
    -- The count should never be negative
    guarantee c >= 0;

    -- If r is asserted, check that count is zero
    mode reset (
        require r;
        ensure c = 0;
    );

    -- If r is not asserted, check that count is increasing 
    mode increasing (
        require not r;
        ensure true -> c > pre c;
    );
tel

node counter(reset : bool) returns (count : int);
(*@contract import counterSpecs(reset) returns (count); *)

let
    count = 0 -> if reset then 0 else (pre count) + 1;
tel

